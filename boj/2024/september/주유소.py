# 어떤 나라에 N개의 도시가 있음
# 이 도시들은 일직선 도로 위에 있음

# 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 힘
# 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있음
# 도로 길이의 단위는 km를 사용힘

# 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 함
# 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있음
# 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용함

# 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있음
# 가격의 단위는 원을 사용함

# 각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램 작성

# 입력
# 표준 입력으로 다음 정보가 주어짐
# 첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)이 주어짐
# 다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개의 자연수로 주어짐
# 다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개의 자연수로 주어짐
# 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수
# 리터당 가격은 1 이상 1,000,000,000 이하의 자연수

# 출력
# 표준 출력으로 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력

N = int(input())
bridge = list(map(int, input().split()))
oil = list(map(int, input().split()))

idx = 0
now_oil, sum_oil = 1000000001, 0

while idx < N - 1:
    if idx == N - 1:
        break

    if now_oil >= oil[idx]:
        now_oil = oil[idx]

    sum_oil += (bridge[idx] * now_oil)
    idx += 1

print(sum_oil)